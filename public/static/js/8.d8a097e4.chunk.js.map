{"version":3,"sources":["views/MessageCreate/components/AboutProject/AboutProject.js","views/MessageCreate/components/Header/Header.js","views/MessageCreate/MessageCreate.js","views/MessageCreate/index.js"],"names":["useStyles","makeStyles","theme","root","alert","marginBottom","spacing","formGroup","fieldGroup","display","alignItems","fieldHint","margin","tags","marginTop","marginLeft","flexGrow","dateField","AboutProject","props","className","onChange","e","rest","classes","useState","title","content","values","setValues","handleFieldChange","event","field","value","persist","newValues","console","log","Card","clsx","CardHeader","CardContent","TextField","style","fullWidth","label","name","target","variant","placeholder","Header","Typography","component","gutterBottom","width","breakpoints","lg","maxWidth","padding","aboutAuthor","aboutProject","projectCover","projectDetails","preferences","actions","ProjectCreate","handleSubmit","a","fetch","window","token","method","post","json","code","Notification","notice","message","setTimeout","location","href","Object","assign","Button","onClick","color"],"mappings":"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","file":"static/js/8.d8a097e4.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport moment from 'moment'\nimport { makeStyles } from '@material-ui/styles'\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  TextField\n} from '@material-ui/core'\n\nimport { RichEditor } from 'components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  alert: {\n    marginBottom: theme.spacing(3)\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0)\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  dateField: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}))\n\nconst AboutProject = props => {\n  const { className, onChange = e => e, ...rest } = props\n\n  const classes = useStyles()\n\n  const initialValues = {\n    title: '',\n    content: ''\n  }\n\n  const [values, setValues] = useState({ ...initialValues })\n\n  const handleFieldChange = (event, field, value) => {\n    if (event) {\n      event.persist && event.persist()\n    }\n    setValues(values => {\n      const newValues =  {\n        ...values,\n        [field]: value\n      }\n      onChange(newValues)\n      return newValues\n    })\n  }\n\n  console.log('notice', values)\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"新建留言\" />\n      <CardContent>\n        <form>\n          <div className={classes.formGroup}>\n            <TextField\n              style={{ marginBottom: 0 }}\n              fullWidth\n              label=\"在此输入标题\"\n              name=\"name\"\n              onChange={event =>\n                handleFieldChange(event, 'title', event.target.value)\n              }\n              variant=\"outlined\"\n            />\n          </div>\n          <RichEditor\n            placeholder=\"在此输入内容\"\n            onChange={value =>\n              handleFieldChange(null, 'content', value)\n            } />\n        </form>\n      </CardContent>\n    </Card>\n  )\n}\n\nAboutProject.propTypes = {\n  className: PropTypes.string\n}\n\nexport default AboutProject\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        component=\"h2\"\n        gutterBottom\n        variant=\"overline\"\n      >\n        欢迎使用镇江市专利网站管理系统\n      </Typography>\n      <Typography\n        component=\"h1\"\n        variant=\"h4\"\n      >\n        欢迎使用在线留言\n          </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\nimport Notification from 'components/Notification'\nimport { Redirect } from 'react-router-dom'\n\nimport { Page } from 'components';\nimport {\n  Header,\n  AboutProject\n} from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3, 3, 6, 3)\n  },\n  aboutAuthor: {\n    marginTop: theme.spacing(3)\n  },\n  aboutProject: {\n    marginTop: theme.spacing(3)\n  },\n  projectCover: {\n    marginTop: theme.spacing(3)\n  },\n  projectDetails: {\n    marginTop: theme.spacing(3)\n  },\n  preferences: {\n    marginTop: theme.spacing(3)\n  },\n  actions: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst ProjectCreate = () => {\n  const values = {}\n  const classes = useStyles()\n  const handleSubmit = async () => {\n    const { title, content } = values\n    try {\n      const post = await fetch(`http://47.96.129.81:8081/f/v1/comment?title=${title}&content=${content}&token=${window.token}`, {\n        method: 'post'\n      })\n      const result = await post.json()\n      if (result.code === 0) {\n        Notification.notice({\n          variant: 'success',\n          message: '发布成功'\n        })\n        setTimeout(() => {\n          location.href = '/#/message'\n        }, 2000)\n      } else {\n        Notification.notice({\n          variant: 'error',\n          message: '发布失败，请重试'\n        })\n      }\n    } catch (e) {\n      Notification.notice({\n        variant: 'error',\n        message: '发布失败，请重试'\n      })\n    }\n  }\n  return (\n    <Page\n      className={classes.root}\n      title=\"Project Create\"\n    >\n      <Header />\n      <AboutProject onChange={newValues => Object.assign(values, newValues)} className={classes.aboutProject} />\n      <div className={classes.actions}>\n        <Button\n          onClick={handleSubmit}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          发布提交\n        </Button>\n      </div>\n    </Page>\n  );\n};\n\nexport default ProjectCreate;\n","export { default } from './MessageCreate';\n"],"sourceRoot":""}