{"version":3,"sources":["views/Complaint/components/Modal/index.js","components/ImageViewer/index.js","views/Complaint/components/Compare/index.js","views/Complaint/components/Process/index.js","views/Complaint/components/Fake/List.js","views/Complaint/components/Fake/Fake.js","views/Complaint/components/Header/Header.js","views/Complaint/components/Infringement/List.js","views/Complaint/components/Infringement/Infrigement.js","views/Complaint/Complaint.js","views/Complaint/index.js"],"names":["DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","props","children","classes","onClose","other","disableTypography","className","Typography","variant","IconButton","aria-label","onClick","DialogContent","MuiDialogContent","forwardRef","ref","React","useState","open","setOpen","handleClickOpen","handleClose","useImperativeHandle","close","label","title","undefined","Button","Dialog","maxWidth","aria-labelledby","id","dividers","image","caption","isOpen","setOpenStatus","src","style","cursor","width","currImg","imgs","srcSet","alt","useStyles","makeStyles","textAlign","border","verticalAlign","styles","sources","dataIndex","cell","val","ImageViewer","data","display","Table","TableHead","TableRow","TableCell","TableBody","map","obj","e","_","get","container","marginTop","textField","button","float","onOk","value","info","setInfo","postData","a","Notification","notice","message","search","querystring","stringify","acceptance_description","fetch","res","json","code","TextField","multiline","rows","defaultValue","onChange","evt","target","placeholder","content","inner","minWidth","nameCell","alignItems","avatar","height","marginRight","actions","justifyContent","Results","onRefresh","onPageChange","rest","page","setPage","rowsPerPage","setRowsPerPage","handleOk","modal","current","useRef","clsx","gutterBottom","count","pageNo","Card","CardHeader","Divider","CardContent","stickyHeader","marginLeft","list","slice","customer","reportedProductName","reportedPatentNumber","moment","createDate","format","informer","informerContact","acceptanceStatus","Chip","acceptanceDescription","Modal","Compare","Process","CardActions","TablePagination","component","onChangePage","event","onChangeRowsPerPage","pageSize","rowsPerPageOptions","getInitialProps","defaultProps","customers","posts","post","marginBottom","Timeline","setData","fetchPosts","token","window","pageNum","complaintType","result","body","useEffect","List","backgroundImage","backgroundSize","backgroundPosition","boxShadow","Header","Grid","justify","item","breakpoints","values","lg","divider","backgroundColor","colors","Profile","match","history","tab","params","tabs","find","t","Tabs","push","scrollButtons","Tab","key","Fake","to"],"mappings":"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","file":"static/js/4.7ec0d9db.chunk.js","sourcesContent":["import React, { forwardRef, useImperativeHandle } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle'\r\nimport MuiDialogContent from '@material-ui/core/DialogContent'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: 4,\r\n    color: theme.palette.grey[500],\r\n  },\r\n})\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h4\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  )\r\n})\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent)\r\n\r\nfunction CustomizedDialogs(props, ref) {\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      close: handleClose,\r\n      open: handleClickOpen\r\n    }\r\n  })\r\n\r\n  const { label, title, children, variant, color = undefined } = props\r\n  return (\r\n    <div>\r\n      <Button variant={\"outlined\"} color={color} onClick={handleClickOpen}>\r\n        {label}\r\n      </Button>\r\n      <Dialog maxWidth=\"lg\" onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          {title}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          {children}\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default forwardRef(CustomizedDialogs)","import React, { useState } from 'react'\r\nimport ImageViewer from 'react-images-viewer'\r\n\r\nexport default (props) => {\r\n  const { image, caption } = props\r\n  const [isOpen, setOpenStatus] = useState(false)\r\n  if (!image || image === 'noPic') {\r\n    return null\r\n  }\r\n  return <div>\r\n    <img src={image} style={{ cursor: 'pointer' }} width={150} onClick={() => setOpenStatus(true)} />\r\n    <ImageViewer onClose={() => setOpenStatus(false)} isOpen={isOpen} currImg={0} imgs={[{\r\n      src: image,\r\n      srcSet: image,\r\n      caption: caption,\r\n      alt: caption\r\n    }]} />\r\n  </div>\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport ImageViewer from 'components/ImageViewer'\r\nimport _ from 'lodash'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    textAlign: 'left',\r\n    border: '1px solid #ececef',\r\n    verticalAlign: 'top'\r\n  }\r\n})\r\n\r\nexport default (props) => {\r\n  const styles = useStyles()\r\n  const sources = [\r\n    {\r\n      label: '专利公开号',\r\n      dataIndex: ['relatedPartyPatentInformation.publicNumber', 'patentInformationOfTheComplainant.publicNumber']\r\n    }, {\r\n      label: '产品名称',\r\n      dataIndex: ['relatedPartyPatentInformation.title', 'patentInformationOfTheComplainant.title']\r\n    }, {\r\n      label: '产品描述',\r\n      dataIndex: ['relatedPartyPatentInformation.summary', 'patentInformationOfTheComplainant.summary']\r\n    }, {\r\n      label: '图片信息',\r\n      dataIndex: ['reportedImagePath', 'investigatorImagePath'],\r\n      cell: (val) => {\r\n        return <ImageViewer image={val} />\r\n      }\r\n    }, {\r\n      label: '申请号',\r\n      dataIndex: ['relatedPartyPatentInformation.applicationNumber', 'patentInformationOfTheComplainant.applicationNumber']\r\n    }, {\r\n      label: '申请日',\r\n      dataIndex: ['relatedPartyPatentInformation.applicationDate', 'patentInformationOfTheComplainant.applicationDate']\r\n    }, {\r\n      label: '当前专利权人',\r\n      dataIndex: ['relatedPartyPatentInformation.applicant', 'patentInformationOfTheComplainant.applicant']\r\n    }, {\r\n      label: '当前法律状态',\r\n      dataIndex: ['relatedPartyPatentInformation.currentLegalStatus', 'patentInformationOfTheComplainant.currentLegalStatus']\r\n    }, {\r\n      label: 'A技术方案(标题)',\r\n      dataIndex: ['relatedPartyPatentInformation.atsTitle', 'patentInformationOfTheComplainant.atsTitle']\r\n    }, {\r\n      label: '备注',\r\n      dataIndex: ['relatedPartyPatentInformation.remark', 'patentInformationOfTheComplainant.remark']\r\n    }\r\n  ]\r\n  const { data } = props\r\n  return (\r\n    <div style={{ display: 'flex', width: '100%' }}>\r\n      <Table className={styles.root}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell className={styles.root} width={'20%'}></TableCell>\r\n            <TableCell className={styles.root} width={'40%'}>举报方</TableCell>\r\n            <TableCell className={styles.root} width={'40%'}>被举报方</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {\r\n            sources.map(obj => {\r\n              const cell = obj.cell || (e => e)\r\n              return <TableRow>\r\n                <TableCell className={styles.root}>{obj.label}</TableCell>\r\n                <TableCell className={styles.root}>{cell(_.get(data, obj.dataIndex[0]))}</TableCell>\r\n                <TableCell className={styles.root}>{cell(_.get(data, obj.dataIndex[1]))}</TableCell>\r\n              </TableRow>\r\n            })\r\n          }\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport querystring from 'query-string'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport Notification from 'components/Notification'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    padding: 0,\r\n    marginTop: -theme.spacing(1)\r\n  },\r\n  textField: {\r\n    width: '100%'\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    float: 'right'\r\n  }\r\n}))\r\n\r\nexport default (props) => {\r\n  const { onOk = () => {} } = props\r\n  const classes = useStyles()\r\n  const [info, setInfo] = useState(props.value)\r\n  const postData = async () => {\r\n    if (!info) {\r\n      Notification.notice({\r\n        variant: 'error',\r\n        message: '请先输入受理意见'\r\n      })\r\n      return\r\n    }\r\n    const search = querystring.stringify({\r\n      id: props.id,\r\n      acceptance_description: info\r\n    })\r\n    const res = await fetch(`http://47.96.129.81:8081/f/v1/reply-to-complaint?${search}`)\r\n    const result = await res.json()\r\n    if (result.code === 0) {\r\n      Notification.notice({\r\n        variant: 'success',\r\n        message: '受理成功'\r\n      })\r\n      onOk()\r\n    }\r\n  }\r\n  const handleSubmit = () => {\r\n    postData()\r\n  }\r\n  const handleChange = (evt) => {\r\n    setInfo(evt.target.value)\r\n  }\r\n  return (\r\n    <div className={classes.container} style={{ width: 600 }}>\r\n      <TextField\r\n        id=\"outlined-multiline-static\"\r\n        label=\"填写受理意见\"\r\n        multiline\r\n        rows=\"4\"\r\n        value={info}\r\n        defaultValue=\"\"\r\n        onChange={handleChange}\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n        placeholder=\"在此输入\"\r\n      />\r\n      <Button onClick={handleSubmit} className={classes.button} variant=\"outlined\" color=\"primary\">提交受理意见</Button>\r\n    </div>\r\n  )\r\n}","import React, { useState, useRef } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport moment from 'moment'\nimport Modal from '../Modal'\nimport Chip from '@material-ui/core/Chip'\nimport Compare from '../Compare'\nimport Process from '../Process'\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  Table,\n  Link,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  Button\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  },\n  nameCell: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    height: 42,\n    width: 42,\n    marginRight: theme.spacing(1)\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { onRefresh = e => e } = props\n  const classes = useStyles()\n  const { className, data, onPageChange = e => e, ...rest } = props\n  const [page, setPage] = useState(0)\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n\n  const handleChangePage = (event, page) => {\n    setPage(page)\n    onPageChange(page, rowsPerPage)\n  }\n\n  const handleChangeRowsPerPage = event => {\n    const pageSize = event.target.value\n    setRowsPerPage(pageSize)\n    onPageChange(page, pageSize)\n  }\n\n  const handleOk = () => {\n    modal.current.close()\n    onRefresh()\n  }\n  const modal = useRef(null)\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        总数 {data.count} 条 / 第 {data.pageNo} 页\n      </Typography>\n      <Card>\n        <CardHeader\n          title=\"投诉列表\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table stickyHeader>\n                <TableHead>\n                  <TableRow>\n                    <TableCell width={140}><label style={{ marginLeft: 10 }}>被举报产品名称</label></TableCell>\n                    <TableCell width={140}>被举报专利号</TableCell>\n                    <TableCell width={130}>举报时间</TableCell>\n                    <TableCell width={100}>举报人</TableCell>\n                    <TableCell width={120}>举报人电话</TableCell>\n                    <TableCell width={100}>受理状态</TableCell>\n                    <TableCell width={180}>受理意见</TableCell>\n                    <TableCell width={100}>对比详情</TableCell>\n                    <TableCell width={120}>操作</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {data.list && data.list.slice(0, rowsPerPage).map(customer => (\n                    <TableRow>\n                      <TableCell padding=\"checkbox\">\n                        <div style={{ marginLeft: 24 }}>\n                          {customer.reportedProductName}\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        {customer.reportedPatentNumber}\n                      </TableCell>\n                      <TableCell>\n                        {moment(customer.createDate).format('YYYY-MM-DD')}\n                      </TableCell>\n                      <TableCell>{customer.informer}</TableCell>\n                      <TableCell>{customer.informerContact}</TableCell>\n                      <TableCell>\n                        {customer.acceptanceStatus == '1' ? <Chip color=\"secondary\" label=\"未受理\" /> : <Chip label=\"已受理\" />}\n                      </TableCell>\n                      <TableCell>\n                        {customer.acceptanceDescription}\n                      </TableCell>\n                      <TableCell>\n                        <Modal title=\"专利信息对比\" label=\"对比\">\n                          <div style={{ width: 760 }}>\n                            <Compare caption={customer.reportedProductName} data={customer} />\n                          </div>\n                        </Modal>\n                      </TableCell>\n                      <TableCell>\n                        <Modal ref={modal} label=\"受理\" title=\"投诉受理\" variant=\"outlined\" color=\"secondary\">\n                          <Process onOk={handleOk} value={customer.acceptanceDescription} id={customer.id} />\n                        </Modal>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={data.count}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.object.isRequired\n}\n\nResults.getInitialProps = () => {\n  return\n}\n\nResults.defaultProps = {\n  customers: []\n}\n\nexport default Results;\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/styles'\nimport querystring from 'query-string'\nimport fetch from 'isomorphic-unfetch'\nimport List from './List'\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  posts: {\n    marginTop: theme.spacing(2)\n  },\n  post: {\n    marginBottom: theme.spacing(2)\n  }\n}))\n\nconst Timeline = props => {\n  const { className, ...rest } = props\n\n  const classes = useStyles()\n  const [data, setData] = useState({\n    list: [],\n    count: 0,\n    pageNo: 1\n  })\n\n  const fetchPosts = async () => {\n    const search = querystring.stringify({\n      token: window.token,\n      pageNum: 1,\n      pageSize: 10,\n      complaintType: 1,\n      createDate: '2019-06-04'\n    })\n    const res = await fetch(`http://47.96.129.81:8081/f/v1/rights-protection-createDate-complaintType?${search}`)\n    const result = await res.json()\n    setData(result.body)\n  }\n  useEffect(() => {\n    fetchPosts()\n  }, [])\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div className={classes.posts}>\n        <List onRefresh={fetchPosts} data={data} />\n      </div>\n    </div>\n  )\n}\n\nTimeline.propTypes = {\n  className: PropTypes.string\n}\n\nexport default Timeline\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    height: 300,\n    backgroundImage: `url(/images/covers/cover_2.jpg)`,\n    backgroundSize: 'cover',\n    backgroundPosition: '0 -100%',\n    boxShadow: '0 0 1px rgba(0, 0, 0, 0.7)'\n  }\n}))\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            欢迎使用镇江市专利网站管理系统\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n            投诉受理\n          </Typography>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useRef } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport moment from 'moment'\nimport Modal from '../Modal'\nimport Chip from '@material-ui/core/Chip'\nimport Compare from '../Compare'\nimport Process from '../Process'\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  Table,\n  Link,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  Button\n} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  },\n  nameCell: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    height: 42,\n    width: 42,\n    marginRight: theme.spacing(1)\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { onRefresh = e => e } = props\n  const classes = useStyles()\n  const { className, data, onPageChange = e => e, ...rest } = props\n  const [page, setPage] = useState(0)\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n\n  const handleChangePage = (event, page) => {\n    setPage(page)\n    onPageChange(page, rowsPerPage)\n  }\n\n  const handleChangeRowsPerPage = event => {\n    const pageSize = event.target.value\n    setRowsPerPage(pageSize)\n    onPageChange(page, pageSize)\n  }\n\n  const handleOk = () => {\n    modal.current.close()\n    onRefresh()\n  }\n  const modal = useRef(null)\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        总数 {data.count} 条 / 第 {data.pageNo} 页\n      </Typography>\n      <Card>\n        <CardHeader\n          title=\"投诉列表\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table stickyHeader>\n                <TableHead>\n                  <TableRow>\n                    <TableCell width={140}><label style={{ marginLeft: 10 }}>被举报产品名称</label></TableCell>\n                    <TableCell width={140}>被举报专利号</TableCell>\n                    <TableCell width={130}>举报时间</TableCell>\n                    <TableCell width={100}>举报人</TableCell>\n                    <TableCell width={120}>举报人电话</TableCell>\n                    <TableCell width={100}>受理状态</TableCell>\n                    <TableCell width={180}>受理意见</TableCell>\n                    <TableCell width={100}>对比详情</TableCell>\n                    <TableCell width={120}>操作</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {data.list && data.list.slice(0, rowsPerPage).map(customer => (\n                    <TableRow>\n                      <TableCell padding=\"checkbox\">\n                        <div style={{ marginLeft: 24 }}>\n                          {customer.reportedProductName}\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        {customer.reportedPatentNumber}\n                      </TableCell>\n                      <TableCell>\n                        {moment(customer.createDate).format('YYYY-MM-DD')}\n                      </TableCell>\n                      <TableCell>{customer.informer}</TableCell>\n                      <TableCell>{customer.informerContact}</TableCell>\n                      <TableCell>\n                        {customer.acceptanceStatus == '1' ? <Chip color=\"secondary\" label=\"未受理\" /> : <Chip label=\"已受理\" />}\n                      </TableCell>\n                      <TableCell>\n                        {customer.acceptanceDescription}\n                      </TableCell>\n                      <TableCell>\n                        <Modal title=\"专利信息对比\" label=\"对比\">\n                          <div style={{ width: 760 }}>\n                            <Compare caption={customer.reportedProductName} data={customer} />\n                          </div>\n                        </Modal>\n                      </TableCell>\n                      <TableCell>\n                        <Modal ref={modal} label=\"受理\" title=\"投诉受理\" variant=\"outlined\" color=\"secondary\">\n                          <Process onOk={handleOk} value={customer.acceptanceDescription} id={customer.id} />\n                        </Modal>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={data.count}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.object.isRequired\n}\n\nResults.getInitialProps = () => {\n  return\n}\n\nResults.defaultProps = {\n  customers: []\n}\n\nexport default Results;\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/styles'\nimport querystring from 'query-string'\nimport fetch from 'isomorphic-unfetch'\nimport List from './List'\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  posts: {\n    marginTop: theme.spacing(2)\n  },\n  post: {\n    marginBottom: theme.spacing(2)\n  }\n}))\n\nconst Timeline = props => {\n  const { className, ...rest } = props\n\n  const classes = useStyles()\n  const [data, setData] = useState({\n    list: [],\n    count: 0,\n    pageNo: 1\n  })\n\n  const fetchPosts = async () => {\n    const search = querystring.stringify({\n      token: window.token,\n      pageNum: 1,\n      pageSize: 10,\n      complaintType: 2,\n      createDate: '2019-06-04'\n    })\n    const res = await fetch(`http://47.96.129.81:8081/f/v1/rights-protection-createDate-complaintType?${search}`)\n    const result = await res.json()\n    setData(result.body)\n  }\n  useEffect(() => {\n    fetchPosts()\n  }, [])\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div className={classes.posts}>\n        <List onRefresh={fetchPosts} data={data} />\n      </div>\n    </div>\n  )\n}\n\nTimeline.propTypes = {\n  className: PropTypes.string\n}\n\nexport default Timeline\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/styles'\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core'\n\nimport { Page } from 'components'\nimport { Header, Fake, Infringement } from './components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  },\n  inner: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}))\n\nconst Profile = props => {\n  const { match, history } = props\n  const classes = useStyles()\n  const { tab } = match.params\n\n  const handleTabsChange = (event, value) => {\n    history.push(value)\n  }\n\n  const tabs = [\n    { value: 'fake', label: '假冒投诉受理' },\n    { value: 'infringement', label: '侵权投诉受理' }\n  ]\n\n  if (!tab) {\n    return <Redirect to={`/complaint/fake`} />\n  }\n\n  if (!tabs.find(t => t.value === tab)) {\n    return <Redirect to=\"/errors/error-404\" />\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"投诉受理\"\n    >\n      <Header />\n      <div className={classes.inner}>\n        <Tabs\n          onChange={handleTabsChange}\n          scrollButtons=\"auto\"\n          value={tab}\n          variant=\"scrollable\"\n        >\n          {tabs.map(tab => (\n            <Tab\n              key={tab.value}\n              label={tab.label}\n              value={tab.value}\n            />\n          ))}\n        </Tabs>\n        <Divider className={classes.divider} />\n        <div className={classes.content}>\n          {tab === 'fake' && <Fake />}\n          {tab === 'infringement' && <Infringement />}\n        </div>\n      </div>\n    </Page>\n  )\n}\n\nProfile.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n}\n\nexport default Profile\n","export { default } from './Complaint';"],"sourceRoot":""}